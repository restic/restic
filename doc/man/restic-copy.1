.nh
.TH "restic backup" "1" "Jan 2017" "generated by \fBrestic generate\fR" ""

.SH NAME
.PP
restic-copy - Copy snapshots from one repository to another


.SH SYNOPSIS
.PP
\fBrestic copy [flags] [snapshotID ...]\fP


.SH DESCRIPTION
.PP
The "copy" command copies one or more snapshots from one repository to another.

.PP
NOTE: This process will have to both download (read) and upload (write) the
entire snapshot(s) due to the different encryption keys used in the source and
destination repositories. This /may incur higher bandwidth usage and costs/ than
expected during normal backup runs.

.PP
NOTE: The copying process does not re-chunk files, which may break deduplication
between the files copied and files already stored in the destination repository.
This means that copied files, which existed in both the source and destination
repository, /may occupy up to twice their space/ in the destination repository.
This can be mitigated by the "--copy-chunker-params" option when initializing a
new destination repository using the "init" command.


.SH OPTIONS
.PP
\fB--from-key-hint\fP=""
	key ID of key to try decrypting the source repository first (default: $RESTIC_FROM_KEY_HINT)

.PP
\fB--from-password-command\fP=""
	shell \fBcommand\fR to obtain the source repository password from (default: $RESTIC_FROM_PASSWORD_COMMAND)

.PP
\fB--from-password-file\fP=""
	\fBfile\fR to read the source repository password from (default: $RESTIC_FROM_PASSWORD_FILE)

.PP
\fB--from-repo\fP=""
	source \fBrepository\fR to copy snapshots from (default: $RESTIC_FROM_REPOSITORY)

.PP
\fB--from-repository-file\fP=""
	\fBfile\fR from which to read the source repository location to copy snapshots from (default: $RESTIC_FROM_REPOSITORY_FILE)

.PP
\fB-h\fP, \fB--help\fP[=false]
	help for copy

.PP
\fB-H\fP, \fB--host\fP=[]
	only consider snapshots for this \fBhost\fR (can be specified multiple times)

.PP
\fB--path\fP=[]
	only consider snapshots including this (absolute) \fBpath\fR (can be specified multiple times)

.PP
\fB--tag\fP=[]
	only consider snapshots including \fBtag[,tag,...]\fR (can be specified multiple times)


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB--cacert\fP=[]
	\fBfile\fR to load root certificates from (default: use system certificates or $RESTIC_CACERT)

.PP
\fB--cache-dir\fP=""
	set the cache \fBdirectory\fR\&. (default: use system default cache directory)

.PP
\fB--cleanup-cache\fP[=false]
	auto remove old cache directories

.PP
\fB--compression\fP=auto
	compression mode (only available for repository format version 2), one of (auto|off|max) (default: $RESTIC_COMPRESSION)

.PP
\fB--insecure-tls\fP[=false]
	skip TLS certificate verification when connecting to the repository (insecure)

.PP
\fB--json\fP[=false]
	set output mode to JSON for commands that support it

.PP
\fB--key-hint\fP=""
	\fBkey\fR ID of key to try decrypting first (default: $RESTIC_KEY_HINT)

.PP
\fB--limit-download\fP=0
	limits downloads to a maximum \fBrate\fR in KiB/s. (default: unlimited)

.PP
\fB--limit-upload\fP=0
	limits uploads to a maximum \fBrate\fR in KiB/s. (default: unlimited)

.PP
\fB--no-cache\fP[=false]
	do not use a local cache

.PP
\fB--no-extra-verify\fP[=false]
	skip additional verification of data before upload (see documentation)

.PP
\fB--no-lock\fP[=false]
	do not lock the repository, this allows some operations on read-only repositories

.PP
\fB-o\fP, \fB--option\fP=[]
	set extended option (\fBkey=value\fR, can be specified multiple times)

.PP
\fB--pack-size\fP=0
	set target pack \fBsize\fR in MiB, created pack files may be larger (default: $RESTIC_PACK_SIZE)

.PP
\fB--password-command\fP=""
	shell \fBcommand\fR to obtain the repository password from (default: $RESTIC_PASSWORD_COMMAND)

.PP
\fB-p\fP, \fB--password-file\fP=""
	\fBfile\fR to read the repository password from (default: $RESTIC_PASSWORD_FILE)

.PP
\fB-q\fP, \fB--quiet\fP[=false]
	do not output comprehensive progress report

.PP
\fB-r\fP, \fB--repo\fP=""
	\fBrepository\fR to backup to or restore from (default: $RESTIC_REPOSITORY)

.PP
\fB--repository-file\fP=""
	\fBfile\fR to read the repository location from (default: $RESTIC_REPOSITORY_FILE)

.PP
\fB--retry-lock\fP=0s
	retry to lock the repository if it is already locked, takes a value like 5m or 2h (default: no retries)

.PP
\fB--tls-client-cert\fP=""
	path to a \fBfile\fR containing PEM encoded TLS client certificate and private key (default: $RESTIC_TLS_CLIENT_CERT)

.PP
\fB-v\fP, \fB--verbose\fP[=0]
	be verbose (specify multiple times or a level using --verbose=n``, max level/times is 2)


.SH SEE ALSO
.PP
\fBrestic(1)\fP
