.nh
.TH "restic backup" "1" "Jan 2017" "generated by \fB\fCrestic generate\fR" ""

.SH NAME
.PP
restic-prune - Remove unneeded data from the repository


.SH SYNOPSIS
.PP
\fBrestic prune [flags]\fP


.SH DESCRIPTION
.PP
The "prune" command checks the repository and removes data that is not
referenced and therefore not needed any more.


.SH EXIT STATUS
.PP
Exit status is 0 if the command was successful, and non-zero if there was any error.


.SH OPTIONS
.PP
\fB-n\fP, \fB--dry-run\fP[=false]
	do not modify the repository, just print what would be done

.PP
\fB-h\fP, \fB--help\fP[=false]
	help for prune

.PP
\fB--max-repack-size\fP=""
	maximum \fB\fCsize\fR to repack (allowed suffixes: k/K, m/M, g/G, t/T)

.PP
\fB--max-unused\fP="5%"
	tolerate given \fB\fClimit\fR of unused data (absolute value in bytes with suffixes k/K, m/M, g/G, t/T, a value in % or the word 'unlimited')

.PP
\fB--repack-cacheable-only\fP[=false]
	only repack packs which are cacheable

.PP
\fB--repack-small\fP[=false]
	repack pack files below 80% of target pack size

.PP
\fB--repack-uncompressed\fP[=false]
	repack all uncompressed data

.PP
\fB--unsafe-recover-no-free-space\fP=""
	UNSAFE, READ THE DOCUMENTATION BEFORE USING! Try to recover a repository stuck with no free space. Do not use without trying out 'prune --max-repack-size 0' first.


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB--cacert\fP=[]
	\fB\fCfile\fR to load root certificates from (default: use system certificates)

.PP
\fB--cache-dir\fP=""
	set the cache \fB\fCdirectory\fR\&. (default: use system default cache directory)

.PP
\fB--cleanup-cache\fP[=false]
	auto remove old cache directories

.PP
\fB--compression\fP=auto
	compression mode (only available for repository format version 2), one of (auto|off|max)

.PP
\fB--insecure-tls\fP[=false]
	skip TLS certificate verification when connecting to the repository (insecure)

.PP
\fB--json\fP[=false]
	set output mode to JSON for commands that support it

.PP
\fB--key-hint\fP=""
	\fB\fCkey\fR ID of key to try decrypting first (default: $RESTIC_KEY_HINT)

.PP
\fB--limit-download\fP=0
	limits downloads to a maximum \fB\fCrate\fR in KiB/s. (default: unlimited)

.PP
\fB--limit-upload\fP=0
	limits uploads to a maximum \fB\fCrate\fR in KiB/s. (default: unlimited)

.PP
\fB--no-cache\fP[=false]
	do not use a local cache

.PP
\fB--no-lock\fP[=false]
	do not lock the repository, this allows some operations on read-only repositories

.PP
\fB-o\fP, \fB--option\fP=[]
	set extended option (\fB\fCkey=value\fR, can be specified multiple times)

.PP
\fB--pack-size\fP=0
	set target pack \fB\fCsize\fR in MiB, created pack files may be larger (default: $RESTIC_PACK_SIZE)

.PP
\fB--password-command\fP=""
	shell \fB\fCcommand\fR to obtain the repository password from (default: $RESTIC_PASSWORD_COMMAND)

.PP
\fB-p\fP, \fB--password-file\fP=""
	\fB\fCfile\fR to read the repository password from (default: $RESTIC_PASSWORD_FILE)

.PP
\fB-q\fP, \fB--quiet\fP[=false]
	do not output comprehensive progress report

.PP
\fB-r\fP, \fB--repo\fP=""
	\fB\fCrepository\fR to backup to or restore from (default: $RESTIC_REPOSITORY)

.PP
\fB--repository-file\fP=""
	\fB\fCfile\fR to read the repository location from (default: $RESTIC_REPOSITORY_FILE)

.PP
\fB--tls-client-cert\fP=""
	path to a \fB\fCfile\fR containing PEM encoded TLS client certificate and private key

.PP
\fB-v\fP, \fB--verbose\fP[=0]
	be verbose (specify multiple times or a level using --verbose=n``, max level/times is 2)


.SH SEE ALSO
.PP
\fBrestic(1)\fP
