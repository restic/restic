.nh
.TH "restic backup" "1" "Jan 2017" "generated by \fBrestic generate\fR" ""

.SH NAME
.PP
restic-stats - Scan the repository and show basic statistics


.SH SYNOPSIS
.PP
\fBrestic stats [flags] [snapshot ID] [...]\fP


.SH DESCRIPTION
.PP
The "stats" command walks one or multiple snapshots in a repository
and accumulates statistics about the data stored therein. It reports
on the number of unique files and their sizes, according to one of
the counting modes as given by the --mode flag.

.PP
It operates on all snapshots matching the selection criteria or all
snapshots if nothing is specified. The special snapshot ID "latest"
is also supported. Some modes make more sense over
just a single snapshot, while others are useful across all snapshots,
depending on what you are trying to calculate.

.PP
The modes are:

.RS
.IP \(bu 2
restore-size: (default) Counts the size of the restored files.
.IP \(bu 2
files-by-contents: Counts total size of files, where a file is
considered unique if it has unique contents.
.IP \(bu 2
raw-data: Counts the size of blobs in the repository, regardless of
how many files reference them.
.IP \(bu 2
blobs-per-file: A combination of files-by-contents and raw-data.

.RE

.PP
Refer to the online manual for more details about each mode.


.SH EXIT STATUS
.PP
Exit status is 0 if the command was successful, and non-zero if there was any error.


.SH OPTIONS
.PP
\fB-h\fP, \fB--help\fP[=false]
	help for stats

.PP
\fB-H\fP, \fB--host\fP=[]
	only consider snapshots for this \fBhost\fR (can be specified multiple times)

.PP
\fB--mode\fP="restore-size"
	counting mode: restore-size (default), files-by-contents, blobs-per-file or raw-data

.PP
\fB--path\fP=[]
	only consider snapshots including this (absolute) \fBpath\fR (can be specified multiple times)

.PP
\fB--tag\fP=[]
	only consider snapshots including \fBtag[,tag,...]\fR (can be specified multiple times)


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB--cacert\fP=[]
	\fBfile\fR to load root certificates from (default: use system certificates or $RESTIC_CACERT)

.PP
\fB--cache-dir\fP=""
	set the cache \fBdirectory\fR\&. (default: use system default cache directory)

.PP
\fB--cleanup-cache\fP[=false]
	auto remove old cache directories

.PP
\fB--compression\fP=auto
	compression mode (only available for repository format version 2), one of (auto|off|max) (default: $RESTIC_COMPRESSION)

.PP
\fB--insecure-tls\fP[=false]
	skip TLS certificate verification when connecting to the repository (insecure)

.PP
\fB--json\fP[=false]
	set output mode to JSON for commands that support it

.PP
\fB--key-hint\fP=""
	\fBkey\fR ID of key to try decrypting first (default: $RESTIC_KEY_HINT)

.PP
\fB--limit-download\fP=0
	limits downloads to a maximum \fBrate\fR in KiB/s. (default: unlimited)

.PP
\fB--limit-upload\fP=0
	limits uploads to a maximum \fBrate\fR in KiB/s. (default: unlimited)

.PP
\fB--no-cache\fP[=false]
	do not use a local cache

.PP
\fB--no-extra-verify\fP[=false]
	skip additional verification of data before upload (see documentation)

.PP
\fB--no-lock\fP[=false]
	do not lock the repository, this allows some operations on read-only repositories

.PP
\fB-o\fP, \fB--option\fP=[]
	set extended option (\fBkey=value\fR, can be specified multiple times)

.PP
\fB--pack-size\fP=0
	set target pack \fBsize\fR in MiB, created pack files may be larger (default: $RESTIC_PACK_SIZE)

.PP
\fB--password-command\fP=""
	shell \fBcommand\fR to obtain the repository password from (default: $RESTIC_PASSWORD_COMMAND)

.PP
\fB-p\fP, \fB--password-file\fP=""
	\fBfile\fR to read the repository password from (default: $RESTIC_PASSWORD_FILE)

.PP
\fB-q\fP, \fB--quiet\fP[=false]
	do not output comprehensive progress report

.PP
\fB-r\fP, \fB--repo\fP=""
	\fBrepository\fR to backup to or restore from (default: $RESTIC_REPOSITORY)

.PP
\fB--repository-file\fP=""
	\fBfile\fR to read the repository location from (default: $RESTIC_REPOSITORY_FILE)

.PP
\fB--retry-lock\fP=0s
	retry to lock the repository if it is already locked, takes a value like 5m or 2h (default: no retries)

.PP
\fB--tls-client-cert\fP=""
	path to a \fBfile\fR containing PEM encoded TLS client certificate and private key (default: $RESTIC_TLS_CLIENT_CERT)

.PP
\fB-v\fP, \fB--verbose\fP[=0]
	be verbose (specify multiple times or a level using --verbose=n``, max level/times is 2)


.SH SEE ALSO
.PP
\fBrestic(1)\fP
